DOCUMENTAÇÃO TÉCNICA — VIDA PLENA BACKEND

Visão Geral
O projeto Vida Plena Backend é uma aplicação desenvolvida com o framework NestJS (Node.js), focada em fornecer uma base para APIs RESTful. Até o momento, o backend está em estágio inicial, com estrutura básica pronta e alguns endpoints de exemplo implementados.

Estrutura do Projeto
- Framework: NestJS (Node.js)
- Diretório principal: src/
- Principais arquivos:
  - main.ts: ponto de entrada da aplicação
  - app.module.ts: módulo raiz
  - app.controller.ts: controller principal
  - app.service.ts: serviço principal

Módulos e Serviços
AppModule
Arquivo: src/app.module.ts
Descrição: Módulo principal da aplicação, responsável por importar controllers e providers (serviços).
Controllers registrados: AppController
Providers registrados: AppService

Controllers
AppController
Arquivo: src/app.controller.ts
Descrição: Controller principal, responsável por gerenciar as rotas básicas da aplicação.
Endpoints implementados:
1. GET /
   - Descrição: Retorna uma mensagem de boas-vindas.
   - Resposta: "Hello World!"
2. GET /bible
   - Descrição: Retorna um array de versículos bíblicos aleatórios (hardcoded).
   - Resposta:
     - "Conhecereis a verdade e ela te libertara"
     - "Eu sou o Caminho a Verdade e a Vida"
     - "E Jesus Chorou"

Serviços
AppService
Arquivo: src/app.service.ts
Descrição: Serviço principal, responsável pela lógica dos endpoints do AppController.
Métodos:
- getHello(): retorna a string "Hello World!"
- getRandonVers(): retorna um array de três versículos bíblicos (strings fixas)

Testes
Arquivo: src/app.controller.spec.ts
Descrição: Testes unitários para o AppController, validando o retorno do endpoint raiz (/).

Inicialização
Arquivo: src/main.ts
Descrição: Inicializa a aplicação NestJS e a coloca para escutar na porta definida pela variável de ambiente PORT ou, por padrão, na porta 3000.

Observações
- Não há outros módulos, controllers, serviços, entidades, repositórios ou schemas implementados até o momento.
- O backend está pronto para ser expandido com novas funcionalidades, endpoints, integrações com banco de dados, autenticação, etc.

Resumo do Progresso
- Estrutura básica do projeto NestJS criada.
- Endpoints de exemplo implementados e testados.
- Pronto para receber novas features conforme a necessidade do projeto. 